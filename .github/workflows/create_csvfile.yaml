name: JMeter Test Workflow

on:
  push:
    branches:
      - main  # Trigger on push to the main branch
  pull_request:
    branches:
      - main  # Trigger on pull request to the main branch

jobs:
  jmeter-test:
    runs-on: ubuntu-latest  # This is the environment for the job (Ubuntu)

    steps:
    # Step 1: Checkout the code from the repository
    - name: Checkout repository
      uses: actions/checkout@v2

    # Step 2: Install OpenJDK 8 (using Zulu OpenJDK distribution)
    - name: Install OpenJDK 8 (Zulu)
      uses: actions/setup-java@v2
      with:
        java-version: '8'
        distribution: 'zulu'  
    

    # Step 4: Download and install JMeter
    - name: Install JMeter
      run: |
        wget https://archive.apache.org/dist/jmeter/binaries/apache-jmeter-5.4.1.tgz
        tar -xvzf apache-jmeter-5.4.1.tgz -C /opt/


    # Step 4: check directories 
      - name: Check if directory exists
        run: |
          if [ -d "/opt/apache-jmeter-5.4.1" ]; then
            echo "JMeter directory exists."
          else
            echo "JMeter directory does not exist."
          fi

          if [ -d "/opt/apache-jmeter-5.4.1/bin" ]; then
            echo "bin directory exists."
          else
            echo "bin directory does not exist."
          fi

          if [ -d "/opt/apache-jmeter-5.4.1/lib" ]; then
            echo "lib directory exists."
          else
            echo "lib directory does not exist."
          fi

        

    # Step 5: Install JMeter Plugins (using JMeter Plugin Manager)
    - name: Install JMeter Plugins
      run: |
        # Download cmdrunner-2.3.jar for JMeter Plugin Manager
        wget https://repo1.maven.org/maven2/kg/apc/cmdrunner/2.3/cmdrunner-2.3.jar -P /opt/apache-jmeter-5.4.1/lib/

        # Change to the ext directory
        cd /opt/apache-jmeter-5.4.1/lib/ext/ 

        # Download the JMeter Plugin Manager JAR file
        wget https://jmeter-plugins.org/get/ -O jmeter-plugins-manager.jar

        # Run the Plugin Manager CMD installer
        java -cp jmeter-plugins-manager.jar org.jmeterplugins.repository.PluginManagerCMDInstaller

        # Install required plugins using PluginsManagerCMD.sh
        /opt/apache-jmeter-5.4.1/bin/PluginsManagerCMD.sh install jpgc-dummy,jpgc-graphs-basic,jpgc-graphs-additional,jmeter-grpc-request

        # Download additional required JARs for other plugins
        wget https://github.com/DataDog/jmeter-datadog-backend-listener/releases/download/0.4.0/jmeter-datadog-backend-listener-0.4.0.jar -P /opt/apache-jmeter-5.4.1/lib/ext/
        wget https://repo1.maven.org/maven2/com/blazemeter/jmeter-parallel/0.11/jmeter-parallel-0.11.jar -P /opt/apache-jmeter-5.4.1/lib/ext/
        wget https://repo1.maven.org/maven2/com/blazemeter/jmeter-plugins-random-csv-data-set/0.8/jmeter-plugins-random-csv-data-set-0.8.jar -P /opt/apache-jmeter-5.4.1/lib/ext/




    # Step 6: Create the CSV report from the .jtl file
    - name: Generate CSV from JTL file
      run: |
        latest_file=$(ls -t ./resultfileupload/*.jtl | head -n 1)
          
        # Ensure that a file was found
        if [ -z "$latest_file" ]; then
          echo "No .jtl file found!"
          exit 1
        fi

        echo "Latest file: $latest_file"

        cd  /opt/apache-jmeter-5.4.1/bin/

        # Use the latest .jtl file to generate the CSV report
        ./JMeterPluginsCMD.sh --generate-csv ./aggregated_report.csv \
          --input-jtl ${{ env.latest_file }} \
          --plugin-type AggregateReport \
          --exclude-label-regex true \
          --exclude-labels '.*\/.*|.*Token.*|.*BeanShell.*|bzm.*'

        # Ensure the generated CSV file exists
        if [ ! -f "./aggregated_report.csv" ]; then
          echo "CSV file was not created successfully."
          exit 1
        fi

    # Step 7: Commit the result file back to the repository
    - name: Commit result file
      uses: EndBug/add-and-commit@v7
      with:
        author_name: 'GitHub Actions'
        author_email: 'github-actions[bot]@users.noreply.github.com'
        message: 'Add result files generated by JMeter'
        add: './aggregated_report.csv'  # Only add the generated file
              
    # Step 8: Push changes to the repository
    - name: Push changes to repository
      run: |
        git push